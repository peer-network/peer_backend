x-project-name: &project_name "${COMPOSE_PROJECT_NAME}-ci"
services:
  db:
    ports: []
    volumes:
      - ./sql_files_for_import:/docker-entrypoint-initdb.d
      - db_data_ci:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ci-network
      
  backend:
    build:
      context: .
      dockerfile: Dockerfile.local
      args:
        IMAGE_TAG: ${IMAGE_TAG}
    image: peer-backend-ci:${IMAGE_TAG}
    depends_on:
      db:
        condition: service_healthy
    ports: []
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      DB_HOST: db
    volumes:
      - ./src:/var/www/html/src
      - ./runtime-data/logs:/var/www/html/runtime-data/logs
      - ./runtime-data/media/assets:/var/www/html/runtime-data/media/assets
    networks:
      - ci-network
  newman:
    build:
      context: .
      dockerfile: Dockerfile.newman
    volumes:
      - ./tests/postman_collection:/etc/newman
      - ./tests/media_files:/etc/newman/media_files
      - ./newman/reports:/etc/newman/reports
    entrypoint: []
    command: tail -f /dev/null
    mem_limit: 2g
    networks:
      - ci-network

networks:
  ci-network:
    name: "${COMPOSE_PROJECT_NAME}_ci2_network"

volumes:
  db_data_ci:
    name: "${COMPOSE_PROJECT_NAME}_ci2_db_data"